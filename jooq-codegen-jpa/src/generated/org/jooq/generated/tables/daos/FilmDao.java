/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JFilm;
import org.jooq.generated.tables.pojos.Film;
import org.jooq.generated.tables.records.FilmRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmDao extends DAOImpl<FilmRecord, Film, Long> {

    /**
     * Create a new FilmDao without any configuration
     */
    public FilmDao() {
        super(JFilm.FILM, Film.class);
    }

    /**
     * Create a new FilmDao with an attached configuration
     */
    public FilmDao(Configuration configuration) {
        super(JFilm.FILM, Film.class, configuration);
    }

    @Override
    public Long getId(Film object) {
        return object.getFilmId();
    }

    /**
     * Fetch records that have <code>FILM_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJFilmId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JFilm.FILM.FILM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>FILM_ID IN (values)</code>
     */
    public List<Film> fetchByJFilmId(Long... values) {
        return fetch(JFilm.FILM.FILM_ID, values);
    }

    /**
     * Fetch a unique record that has <code>FILM_ID = value</code>
     */
    public Film fetchOneByJFilmId(Long value) {
        return fetchOne(JFilm.FILM.FILM_ID, value);
    }

    /**
     * Fetch a unique record that has <code>FILM_ID = value</code>
     */
    public Optional<Film> fetchOptionalByJFilmId(Long value) {
        return fetchOptional(JFilm.FILM.FILM_ID, value);
    }

    /**
     * Fetch records that have <code>DESCRIPTION BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilm.FILM.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DESCRIPTION IN (values)</code>
     */
    public List<Film> fetchByJDescription(String... values) {
        return fetch(JFilm.FILM.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>LAST_UPDATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JFilm.FILM.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LAST_UPDATE IN (values)</code>
     */
    public List<Film> fetchByJLastUpdate(LocalDateTime... values) {
        return fetch(JFilm.FILM.LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>LENGTH BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJLength(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JFilm.FILM.LENGTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LENGTH IN (values)</code>
     */
    public List<Film> fetchByJLength(Integer... values) {
        return fetch(JFilm.FILM.LENGTH, values);
    }

    /**
     * Fetch records that have <code>RATING BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJRating(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilm.FILM.RATING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RATING IN (values)</code>
     */
    public List<Film> fetchByJRating(String... values) {
        return fetch(JFilm.FILM.RATING, values);
    }

    /**
     * Fetch records that have <code>RELEASE_YEAR BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJReleaseYear(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JFilm.FILM.RELEASE_YEAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RELEASE_YEAR IN (values)</code>
     */
    public List<Film> fetchByJReleaseYear(Integer... values) {
        return fetch(JFilm.FILM.RELEASE_YEAR, values);
    }

    /**
     * Fetch records that have <code>RENTAL_DURATION BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJRentalDuration(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(JFilm.FILM.RENTAL_DURATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RENTAL_DURATION IN (values)</code>
     */
    public List<Film> fetchByJRentalDuration(Short... values) {
        return fetch(JFilm.FILM.RENTAL_DURATION, values);
    }

    /**
     * Fetch records that have <code>RENTAL_RATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJRentalRate(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(JFilm.FILM.RENTAL_RATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RENTAL_RATE IN (values)</code>
     */
    public List<Film> fetchByJRentalRate(BigDecimal... values) {
        return fetch(JFilm.FILM.RENTAL_RATE, values);
    }

    /**
     * Fetch records that have <code>REPLACEMENT_COST BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJReplacementCost(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(JFilm.FILM.REPLACEMENT_COST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>REPLACEMENT_COST IN (values)</code>
     */
    public List<Film> fetchByJReplacementCost(BigDecimal... values) {
        return fetch(JFilm.FILM.REPLACEMENT_COST, values);
    }

    /**
     * Fetch records that have <code>SPECIAL_FEATURES BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJSpecialFeatures(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilm.FILM.SPECIAL_FEATURES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SPECIAL_FEATURES IN (values)</code>
     */
    public List<Film> fetchByJSpecialFeatures(String... values) {
        return fetch(JFilm.FILM.SPECIAL_FEATURES, values);
    }

    /**
     * Fetch records that have <code>TITLE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilm.FILM.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TITLE IN (values)</code>
     */
    public List<Film> fetchByJTitle(String... values) {
        return fetch(JFilm.FILM.TITLE, values);
    }

    /**
     * Fetch records that have <code>LANGUAGE_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Film> fetchRangeOfJLanguageId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JFilm.FILM.LANGUAGE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LANGUAGE_ID IN (values)</code>
     */
    public List<Film> fetchByJLanguageId(Long... values) {
        return fetch(JFilm.FILM.LANGUAGE_ID, values);
    }

    /**
     * Fetch records that have <code>ORIGINAL_LANGUAGE_ID BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<Film> fetchRangeOfJOriginalLanguageId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JFilm.FILM.ORIGINAL_LANGUAGE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ORIGINAL_LANGUAGE_ID IN (values)</code>
     */
    public List<Film> fetchByJOriginalLanguageId(Long... values) {
        return fetch(JFilm.FILM.ORIGINAL_LANGUAGE_ID, values);
    }
}
