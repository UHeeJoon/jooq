/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.generated.tables.JFilmCategory;
import org.jooq.generated.tables.pojos.FilmCategory;
import org.jooq.generated.tables.records.FilmCategoryRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilmCategoryDao extends DAOImpl<FilmCategoryRecord, FilmCategory, Record2<Long, Long>> {

    /**
     * Create a new FilmCategoryDao without any configuration
     */
    public FilmCategoryDao() {
        super(JFilmCategory.FILM_CATEGORY, FilmCategory.class);
    }

    /**
     * Create a new FilmCategoryDao with an attached configuration
     */
    public FilmCategoryDao(Configuration configuration) {
        super(JFilmCategory.FILM_CATEGORY, FilmCategory.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(FilmCategory object) {
        return compositeKeyRecord(object.getCategoryId(), object.getFilmId());
    }

    /**
     * Fetch records that have <code>CATEGORY_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FilmCategory> fetchRangeOfJCategoryId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JFilmCategory.FILM_CATEGORY.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CATEGORY_ID IN (values)</code>
     */
    public List<FilmCategory> fetchByJCategoryId(Long... values) {
        return fetch(JFilmCategory.FILM_CATEGORY.CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>FILM_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FilmCategory> fetchRangeOfJFilmId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JFilmCategory.FILM_CATEGORY.FILM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>FILM_ID IN (values)</code>
     */
    public List<FilmCategory> fetchByJFilmId(Long... values) {
        return fetch(JFilmCategory.FILM_CATEGORY.FILM_ID, values);
    }

    /**
     * Fetch records that have <code>LAST_UPDATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FilmCategory> fetchRangeOfJLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JFilmCategory.FILM_CATEGORY.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LAST_UPDATE IN (values)</code>
     */
    public List<FilmCategory> fetchByJLastUpdate(LocalDateTime... values) {
        return fetch(JFilmCategory.FILM_CATEGORY.LAST_UPDATE, values);
    }
}
