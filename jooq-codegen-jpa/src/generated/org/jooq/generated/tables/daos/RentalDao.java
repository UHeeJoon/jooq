/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JRental;
import org.jooq.generated.tables.pojos.Rental;
import org.jooq.generated.tables.records.RentalRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RentalDao extends DAOImpl<RentalRecord, Rental, Integer> {

    /**
     * Create a new RentalDao without any configuration
     */
    public RentalDao() {
        super(JRental.RENTAL, Rental.class);
    }

    /**
     * Create a new RentalDao with an attached configuration
     */
    public RentalDao(Configuration configuration) {
        super(JRental.RENTAL, Rental.class, configuration);
    }

    @Override
    public Integer getId(Rental object) {
        return object.getRentalId();
    }

    /**
     * Fetch records that have <code>RENTAL_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Rental> fetchRangeOfJRentalId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JRental.RENTAL.RENTAL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RENTAL_ID IN (values)</code>
     */
    public List<Rental> fetchByJRentalId(Integer... values) {
        return fetch(JRental.RENTAL.RENTAL_ID, values);
    }

    /**
     * Fetch a unique record that has <code>RENTAL_ID = value</code>
     */
    public Rental fetchOneByJRentalId(Integer value) {
        return fetchOne(JRental.RENTAL.RENTAL_ID, value);
    }

    /**
     * Fetch a unique record that has <code>RENTAL_ID = value</code>
     */
    public Optional<Rental> fetchOptionalByJRentalId(Integer value) {
        return fetchOptional(JRental.RENTAL.RENTAL_ID, value);
    }

    /**
     * Fetch records that have <code>LAST_UPDATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Rental> fetchRangeOfJLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JRental.RENTAL.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LAST_UPDATE IN (values)</code>
     */
    public List<Rental> fetchByJLastUpdate(LocalDateTime... values) {
        return fetch(JRental.RENTAL.LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>RENTAL_DATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Rental> fetchRangeOfJRentalDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JRental.RENTAL.RENTAL_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RENTAL_DATE IN (values)</code>
     */
    public List<Rental> fetchByJRentalDate(LocalDateTime... values) {
        return fetch(JRental.RENTAL.RENTAL_DATE, values);
    }

    /**
     * Fetch records that have <code>RETURN_DATE BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Rental> fetchRangeOfJReturnDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JRental.RENTAL.RETURN_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RETURN_DATE IN (values)</code>
     */
    public List<Rental> fetchByJReturnDate(LocalDateTime... values) {
        return fetch(JRental.RENTAL.RETURN_DATE, values);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Rental> fetchRangeOfJCustomerId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JRental.RENTAL.CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CUSTOMER_ID IN (values)</code>
     */
    public List<Rental> fetchByJCustomerId(Long... values) {
        return fetch(JRental.RENTAL.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>INVENTORY_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Rental> fetchRangeOfJInventoryId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JRental.RENTAL.INVENTORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>INVENTORY_ID IN (values)</code>
     */
    public List<Rental> fetchByJInventoryId(Long... values) {
        return fetch(JRental.RENTAL.INVENTORY_ID, values);
    }

    /**
     * Fetch records that have <code>STAFF_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Rental> fetchRangeOfJStaffId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JRental.RENTAL.STAFF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STAFF_ID IN (values)</code>
     */
    public List<Rental> fetchByJStaffId(Long... values) {
        return fetch(JRental.RENTAL.STAFF_ID, values);
    }
}
