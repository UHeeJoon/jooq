/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.generated.tables.JStore;
import org.jooq.generated.tables.pojos.Store;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreRecord extends UpdatableRecordImpl<StoreRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>STORE.STORE_ID</code>.
     */
    public StoreRecord setStoreId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>STORE.STORE_ID</code>.
     */
    public Long getStoreId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>STORE.LAST_UPDATE</code>.
     */
    public StoreRecord setLastUpdate(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>STORE.LAST_UPDATE</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>STORE.ADDRESS_ID</code>.
     */
    public StoreRecord setAddressId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>STORE.ADDRESS_ID</code>.
     */
    public Long getAddressId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>STORE.MANAGER_STAFF_ID</code>.
     */
    public StoreRecord setManagerStaffId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>STORE.MANAGER_STAFF_ID</code>.
     */
    public Long getManagerStaffId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StoreRecord
     */
    public StoreRecord() {
        super(JStore.STORE);
    }

    /**
     * Create a detached, initialised StoreRecord
     */
    public StoreRecord(Long storeId, LocalDateTime lastUpdate, Long addressId, Long managerStaffId) {
        super(JStore.STORE);

        setStoreId(storeId);
        setLastUpdate(lastUpdate);
        setAddressId(addressId);
        setManagerStaffId(managerStaffId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised StoreRecord
     */
    public StoreRecord(Store value) {
        super(JStore.STORE);

        if (value != null) {
            setStoreId(value.getStoreId());
            setLastUpdate(value.getLastUpdate());
            setAddressId(value.getAddressId());
            setManagerStaffId(value.getManagerStaffId());
            resetChangedOnNotNull();
        }
    }
}
